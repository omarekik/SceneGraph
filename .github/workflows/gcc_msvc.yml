name: Multiplatform workflow for linux and windows
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: 

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
        # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
        fail-fast: false
  
        # Set up a matrix to run the following 2 configurations:
        # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
        # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
        #
        # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
        matrix:
          os: [ubuntu-latest, windows-latest]
          build_type: [Release]
          include:
            - os: windows-latest
              compiler: msvc
              static_analyzer: clang-tidy.exe
              app: \Release\Start.exe
              artifact: artifact_windows
            - os: ubuntu-latest
              compiler: gcc
              static_analyzer: clang-tidy
              app: /Start
              artifact: artifact_linux
    steps:
      - uses: actions/checkout@v4

      #- uses: lukka/get-cmake@latest

      - name: Setup - install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Setup - check tools version
        run: |
          echo "${{ steps.conan.outputs.version }}"
          cmake --version
          ${{ matrix.static_analyzer }} --version

      - name: Restore - Conan dependency packages
        run: |
          conan profile list
          conan profile detect 
          conan install ${{github.workspace}}/start --output-folder=${{github.workspace}}/start/build -s compiler=${{matrix.compiler}} --build=missing

      - name: Build - Generate and configure cmake build system
        working-directory: ${{github.workspace}}/start/build
        run: 
          cmake .. -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      
      - name: Build
        working-directory: ${{github.workspace}}/start/build
        run: cmake --build . --config ${{ matrix.build_type }}
      
      - name: Test - unit test
        working-directory: ${{github.workspace}}/start/build
        run: ctest -C ${{ matrix.build_type }}

      - name: Test - sanity check
        working-directory: ${{github.workspace}}/start/build
        run: |
          main${{matrix.app}} 

      - name: Publish
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.artifact}}
          path: ${{github.workspace}}/start/build/main/${{matrix.app}}
          retention-days: 7
